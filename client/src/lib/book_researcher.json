{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b52f208a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "from dotenv import load_dotenv\n",
    "from crewai_tools import SerperDevTool\n",
    "\n",
    "from crewai import Agent, Task, Crew\n",
    "from src.event_listener.custom_event_streamer import CustomStreamEventListener"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f3e266ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "class BookResearcherCrew:\n",
    "\n",
    "    def __init__(self, openai_llm, gemini_llm):\n",
    "        \n",
    "        load_dotenv()\n",
    "        os.environ[\"SERPER_API_KEY\"] = os.getenv('SERPER_API_KEY')\n",
    "        \n",
    "        self.agents = []\n",
    "        self.tasks = [] \n",
    "        self.openai_llm = openai_llm\n",
    "        self.gemini_llm = gemini_llm\n",
    "\n",
    "    def define_agent(self):\n",
    "        self.trending_books_agent = Agent(\n",
    "            llm = self.openai_llm,\n",
    "            role=\"\"\"Market Research Agent focused on identifying and analyzing \n",
    "            current trending book topics and popular genres.\"\"\",\n",
    "            goal=\"Perform market research to discover the latest trending book topics and high-demand genres. Output a Markdown report with key insights, data points, and sources.\",\n",
    "            backstory=\"\"\"You're a market research specialist with deep knowledge of publishing trends and data analysis.\"\"\",\n",
    "            tools=[SerperDevTool()]\n",
    "        )\n",
    "\n",
    "        self.top_novelists_agent= Agent(\n",
    "            llm = self.openai_llm,\n",
    "            role=\"Author Research Agent dedicated to researching top novelists and their upcoming book releases.\",\n",
    "            goal=\"\"\"Gather information on leading novelists and compile details about their upcoming books, including release dates, descriptions, and patterns. Output a Markdown summary.\"\"\",\n",
    "            backstory=\"\"\"You're a literary analyst who tracks author careers and publication pipelines.\"\"\",\n",
    "            tools=[SerperDevTool()]\n",
    "        )\n",
    "        \n",
    "        self.genre_research_agent= Agent(\n",
    "            llm = self.openai_llm,\n",
    "            role=\"Genre Deep-Dive Agent specializing in in-depth analysis of a specific book genre.\",\n",
    "            goal=\"\"\"Conduct a thorough analysis of a specified genre, covering market size, audience demographics, key authors, and emerging subgenres. Output findings in Markdown.\"\"\",\n",
    "            backstory=\"\"\"You're a specialist in genre studies with expertise in market performance and reader behavior.\"\"\",\n",
    "            tools=[SerperDevTool()]\n",
    "        )\n",
    "\n",
    "        self.agents.append(self.trending_books_agent)\n",
    "        self.agents.append(self.top_novelists_agent)\n",
    "        self.agents.append(self.genre_research_agent)\n",
    " \n",
    "    def define_tasks(self):\n",
    "        # 1) Trending topics task\n",
    "        self.trending_topics_task = Task(\n",
    "            description=(\n",
    "                \"Research and identify the current trending book titles for 2025, \"\n",
    "                \"including at least five book names and their publication or anticipated release dates, and popular genres.\"\n",
    "            ),\n",
    "            expected_output=(\n",
    "                \"A concise Markdown report listing the trending book titles for 2025 with names, dates, \"\n",
    "                \"and brief notes, along with genre classification, key insights, data points, and sources.\"\n",
    "            ),\n",
    "            agent=self.trending_books_agent,\n",
    "            search_query=\"trending book topics 2025\",\n",
    "            markdown=True,\n",
    "        )\n",
    "\n",
    "        # 2) Top novelists task\n",
    "        self.top_novelists_task = Task(\n",
    "            description=(\n",
    "                \"Research leading novelists and list their upcoming book releases, \"\n",
    "                \"including release dates and brief descriptions.\"\n",
    "            ),\n",
    "            expected_output=\"A concise Markdown summary of top novelists and their upcoming books.\",\n",
    "            agent=self.top_novelists_agent,\n",
    "            markdown=True,\n",
    "        )\n",
    "\n",
    "        # 3) Genre research task\n",
    "        self.genre_research_task = Task(\n",
    "            description=(\n",
    "                f\"For the given genre {self.genre}, conduct an in-depth market analysis covering \"\n",
    "                \"market size, audience demographics, key authors, and emerging subgenres.\"\n",
    "            ),\n",
    "            expected_output=\"A concise Markdown report detailing genre performance, demographics, authors, and trends.\",\n",
    "            agent=self.genre_research_agent,\n",
    "            markdown=True,\n",
    "        )\n",
    "\n",
    "        # Collect all tasks\n",
    "        self.tasks.extend([\n",
    "            self.trending_topics_task,\n",
    "            self.top_novelists_task,\n",
    "            self.genre_research_task,\n",
    "        ])\n",
    "\n",
    "    def get_tasks_output(self):\n",
    "        return {\n",
    "            \"trending_topics\": self.trending_topics_task.output,\n",
    "            \"top_novelists\": self.top_novelists_task.output,\n",
    "            \"genre_research\": self.genre_research_task.output,\n",
    "        }\n",
    "        \n",
    "    def crew_formation(self):\n",
    "\n",
    "        self.define_agent()\n",
    "        self.define_task()\n",
    "\n",
    "        return Crew(\n",
    "            agents=self.agents,\n",
    "            tasks=self.tasks,\n",
    "            event_listener=CustomStreamEventListener()\n",
    "        )"
   ]
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
